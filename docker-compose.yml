version: '3.9'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - quizapp-network
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

 # redis:
 #   image: redis:latest
 #   container_name: redis
 #   ports:
 #     - "6379:6379"
 #   networks:
 #     - quizapp-network
 #   volumes:
 #     - redis-data:/data
 #   healthcheck:
 #     test: ["CMD", "redis-cli", "ping"]
 #     interval: 10s
  #    timeout: 5s
  #    retries: 5
  #  restart: unless-stopped

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH: "false"
    networks:
      - quizapp-network
    depends_on:
      mongodb:
        condition: service_healthy

  quizapp:
    container_name: quizapp
    build:
      context: .
      dockerfile: Dockerfile
    image: quizapp
    ports:
      - "8082:8082"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/quizdb
    depends_on:
      #redis:
      #  condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - quizapp-network
       # aliases:
       #   - redis-host
    restart: unless-stopped

networks:
  quizapp-network:
    driver: bridge

volumes:
  mongo-data:
  #redis-data: